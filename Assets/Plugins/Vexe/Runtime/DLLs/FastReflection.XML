<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FastReflection</name>
    </assembly>
    <members>
        <member name="T:Vexe.Runtime.Extensions.FastReflection">
            <summary>
            A dynamic reflection extensions library that emits IL to set/get fields/properties, call methods and invoke constructors
            Once the delegate is created, it can be stored and reused resulting in much faster access times than using regular reflection
            The results are cached. Once a delegate is generated, any subsequent call to generate the same delegate on the same field/property/method will return the previously generated delegate
            Note: Since this generates IL, it won't work on AOT platforms such as iOS an Android. But is useful and works very well in editor codes and standalone targets
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForCtor``1(System.Type,System.Type[])">
            <summary>
            Generates or gets a strongly-typed open-instance delegate to the specified type constructor that takes the specified type params
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForCtor(System.Type,System.Type[])">
            <summary>
            Generates or gets a weakly-typed open-instance delegate to the specified type constructor that takes the specified type params
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForGet``2(System.Reflection.PropertyInfo)">
            <summary>
            Generates or gets a strongly-typed open-instance delegate to get the value of the specified property from a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForGet(System.Reflection.PropertyInfo)">
            <summary>
            Generates or gets a weakly-typed open-instance delegate to get the value of the specified property from a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForSet``2(System.Reflection.PropertyInfo)">
            <summary>
            Generates or gets a strongly-typed open-instance delegate to set the value of the specified property on a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForSet(System.Reflection.PropertyInfo)">
            <summary>
            Generates or gets a weakly-typed open-instance delegate to set the value of the specified property on a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForGet``2(System.Reflection.FieldInfo)">
            <summary>
            Generates an open-instance delegate to get the value of the property from a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForGet(System.Reflection.FieldInfo)">
            <summary>
            Generates a weakly-typed open-instance delegate to set the value of the field in a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForSet``2(System.Reflection.FieldInfo)">
            <summary>
            Generates a strongly-typed open-instance delegate to set the value of the field in a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForSet(System.Reflection.FieldInfo)">
            <summary>
            Generates a weakly-typed open-instance delegate to set the value of the field in a given target
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForCall``2(System.Reflection.MethodInfo)">
            <summary>
            Generates a strongly-typed open-instance delegate to invoke the specified method
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.DelegateForCall(System.Reflection.MethodInfo)">
            <summary>
            Generates a weakly-typed open-instance delegate to invoke the specified method
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.SafeInvoke``2(Vexe.Runtime.Extensions.MethodCaller{``0,``1},``0,System.Object[])">
            <summary>
            Executes the delegate on the specified target and arguments but only if it's not null
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.SafeInvoke``2(Vexe.Runtime.Extensions.MemberSetter{``0,``1},``0@,``1)">
            <summary>
            Executes the delegate on the specified target and value but only if it's not null
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.SafeInvoke``2(Vexe.Runtime.Extensions.MemberGetter{``0,``1},``0)">
            <summary>
            Executes the delegate on the specified target only if it's not null, returns default(TReturn) otherwise
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.GenDebugAssembly(System.String,System.Reflection.FieldInfo,System.Reflection.PropertyInfo,System.Reflection.MethodInfo,System.Type,System.Type[])">
            <summary>
            Generates a assembly called 'name' that's useful for debugging purposes and inspecting the resulting C# code in ILSpy
            If 'field' is not null, it generates a setter and getter for that field
            If 'property' is not null, it generates a setter and getter for that property
            If 'method' is not null, it generates a call for that method
            if 'targetType' and 'ctorParamTypes' are not null, it generates a constructor for the target type that takes the specified arguments
            </summary>
        </member>
        <member name="M:Vexe.Runtime.Extensions.FastReflection.GenDebugAssembly``1(System.String,System.Reflection.FieldInfo,System.Reflection.PropertyInfo,System.Reflection.MethodInfo,System.Type,System.Type[])">
            <summary>
            Generates a assembly called 'name' that's useful for debugging purposes and inspecting the resulting C# code in ILSpy
            If 'field' is not null, it generates a setter and getter for that field
            If 'property' is not null, it generates a setter and getter for that property
            If 'method' is not null, it generates a call for that method
            if 'targetType' and 'ctorParamTypes' are not null, it generates a constructor for the target type that takes the specified arguments
            </summary>
        </member>
    </members>
</doc>
